var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){const{createRequire:a}=await import("module");var t=a(import.meta.url),r=t("worker_threads"),o=r.parentPort;o.on("message",(e=>onmessage({data:e})));var s=t("fs"),n=t("vm");Object.assign(global,{self:global,require:t,Module:e,location:{href:"undefined"!=typeof __filename?__filename:import.meta.url},Worker:r.Worker,importScripts:e=>n.runInThisContext(s.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>o.postMessage(e),performance:global.performance||{now:Date.now}})}var d=!1;var i=function(...e){var t=e.join(" ");a?s.writeSync(2,t+"\n"):console.error(t)};self.alert=function(...a){var t=a.join(" ");postMessage({cmd:"alert",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(a,t)=>{var r=e.wasmModule;return e.wasmModule=null,t(new WebAssembly.Instance(r,a))},self.onunhandledrejection=e=>{throw e.reason||e},self.onmessage=function a(t){try{if("load"===t.data.cmd){let r=[];self.onmessage=e=>r.push(e),self.startWorker=t=>{e=t,postMessage({cmd:"loaded"});for(let e of r)a(e);self.onmessage=a},e.wasmModule=t.data.wasmModule;for(const a of t.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,(t.data.urlOrBlob?import(t.data.urlOrBlob):import("./dotnet.native.js")).then((a=>a.default(e)))}else if("run"===t.data.cmd){e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(t.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),d||(d=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(r){if("unwind"!=r)throw r}}else"cancel"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===t.data.target||("checkMailbox"===t.data.cmd?d&&e.checkMailbox():t.data.cmd&&(i(`worker.js received unknown command ${t.data.cmd}`),i(t.data)))}catch(r){throw e.__emscripten_thread_crashed?.(),r}};